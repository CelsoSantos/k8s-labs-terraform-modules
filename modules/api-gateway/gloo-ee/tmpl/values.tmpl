gloo:
  accessLogger:
    enabled: ${access_logger_enabled}
    stats:
      enabled: false
  discovery:
    enabled: ${discovery_enabled}
    deployment:
      stats: ${discovery_stats}
    fdsMode: ${discovery_fds_mode}
  gateway:
    enabled: ${gateway_enabled}
    deployment:
      stats:
        enabled: ${gateway_stats}
  gatewayProxies:
    gatewayProxy:
      stats:
        enabled: true
  gloo:
    deployment:
      stats:
        enabled: ${stats}
  namespace:
    create: false
  k8s:
    clusterName: cluster.local

settings:
  create: true
  integrations:
    knative:
      enabled: ${knative_enabled}
      version: ${knative_version}

# grafana:
#   dashboardProviders:
#     dashboardproviders.yaml:
#       apiVersion: 1
#       providers:
#         - disableDeletion: false
#           editable: true
#           folder: gloo
#           name: gloo
#           options:
#             path: /var/lib/grafana/dashboards/gloo
#           orgId: 1
#           type: file
#   dashboardsConfigMaps:
#     gloo: glooe-grafana-custom-dashboards
#   datasources:
#     datasources.yaml:
#       apiVersion: 1
#       datasources:
#         - access: proxy
#           isDefault: true
#           name: gloo
#           type: prometheus
#           url: ${prometheus_url}
#   defaultInstallationEnabled: false

# observability:
#   customGrafana:
#     enabled: true
#     username: ${grafana_username}
#     password: ${grafana_password}
#     url: ${grafana_url}

# prometheus:
#   enabled: true
#   alertmanager:
#     enabled: true
#     persistentVolume:
#       size: 20Gi
#     statefulSet:
#       enabled: true
#   nodeExporter:
#     enabled: false
#   pushgateway:
#     persistentVolume:
#       size: 10Gi
#   rbac:
#     create: true
#   server:
#     statefulSet:
#       enabled: true

global:
  glooRbac:
    create: false
  glooStats:
    enabled: false
  # redis:
  #   deployment:
  #     image:
  #       pullPolicy: IfNotPresent
  #       registry: docker.io
  #       repository: redis
  #       tag: "5"
  #     staticPort: 6379
  #   service:
  #     name: redis
  #     port: 6379
